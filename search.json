[{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"spacedeconv","dir":"Articles","previous_headings":"","what":"spacedeconv","title":"Getting started","text":"spacedeconv unified interface 31 deconvolution tools focus spatial transcriptomics datasets. total 17 second-generation deconvolution tools included, enabling deconvolution cell types single-cell reference data available. Additionally 10 first-generation tools, focussing deconvolution immune cells, available well 4 first-generation methods optimised mouse data. methods don’t require scRNA-seq data perform deconvolution utilize precomputed verified signatures.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started","text":"two ways install spacedeconv: minimal installation installs dependencies required basic functionalities. deconvolution methods need installed -demand. complete installtation installs dependencies including deconvolution methods. may take considerable time. Since dependencies CRAN Bioconductor, spacedeconv available GitHub . recommend installing trough pak package manager:","code":"install.packages(\"pak\")  # minimal installation pak::pkg_install(\"omnideconv/spacedeconv\")  # complete installation pak::pkg_install(\"omnideconv/spacedeconv\", dependencies = TRUE)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"data-requirements","dir":"Articles","previous_headings":"","what":"Data requirements","title":"Getting started","text":"spacedeconv offers convenient access perform first- second-generation deconvolution spatial transcriptomics datasets. deconvolution can performed directly first-generation methods, second-generation algorithms require additional annotated single-cell reference. SpatialExperiment, deconvoluted SingleCellExperiment (recommended), anndata Seurat containing cell type information can load 10X Visium Data providing spaceranger output folder. possible run spacedeconv manually created SpatialExperiments. See SpatialExperiment Documentation details.","code":"spe <- SpatialExperiment::read10xVisium(\"path_to_directory\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Getting started","text":"core modules spacedeconv used build reference signature deconvolute spatial transcriptomics data. provide convenient functions normalization visualization. full list deconvolution algorithms can accessed spacedeconv::deconvolution_methods FAQ.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"normalization","dir":"Articles","previous_headings":"Workflow","what":"1. Normalization","title":"Getting started","text":"spacedeconv offers function normalize spatial expression data. normalization saved additional assay, make sure use correct data deconvolution providing desired assay parameters assay_sc assay_sp.","code":"spe <- spacedeconv::normalize(spe, method = \"cpm\")  # specify expression assay to use signature <- spacedeconv::build_model(spe,   method = \"quantiseq\",   assay_sp = \"cpm\" )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"building-a-reference-signature","dir":"Articles","previous_headings":"Workflow","what":"2. Building a reference Signature","title":"Getting started","text":"second-generation deconvolution tools require cell-type specific reference signature can calculated build_model() function. build signature annotated single-cell sequencing data required.","code":"signature <- spacedeconv::build_model(   single_cell_object,   cell_type_col = \"celltype_major\",   method = \"spotlight\",   assay_sc = \"cpm\" )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"deconvolution","dir":"Articles","previous_headings":"Workflow","what":"3. Deconvolution","title":"Getting started","text":"function deconvolutes spatial transcriptomics dataset using one spacedeconvs 31 deconvolution tools. Since first-generation deconvolution tools contain predefined expression signatures tools can used directly spatial data. need provide signature case. spacedeconv returns SpatialExperiment object annotated deconvolution results.","code":"# save the results to an annotated SpatialExperiment result <- spacedeconv::deconvolute(   spatial_object,   signature,   method = \"spotlight\" )  # return deconvolution results in table form result <- spacedeconv::deconvolute(   spatial_object,   signature,   method = \"spotlight\",   return_object = FALSE )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"visualization","dir":"Articles","previous_headings":"Workflow","what":"4. Visualization","title":"Getting started","text":"offer 6 visualization function aiming different insight data. full example visualization option available visualization Vignette.","code":"# sample does refer to the first column of ColData(spe) # for cell_type input a celltype present in the deconvolution result spacedeconv::plot_celltype(spe, cell_type = \"spotlight_B.cells\")  # umi count spacedeconv::plot_umi_count(spe)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_colocalization.html","id":"available-colocalization-functions","dir":"Articles","previous_headings":"","what":"Available colocalization functions","title":"Colocalization","text":"‘cell_pair_localization()’ calculates colocalization avoidance two celltypes based random distribution. ‘ripleys_k()’ calculates Ripley´s K statistic outputs corresponding graph","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_colocalization.html","id":"cell_pair_localization","dir":"Articles","previous_headings":"Available colocalization functions","what":"1. ‘cell_pair_localization()’","title":"Colocalization","text":"Calculates colocalization avoidance statistics two celltypes interest based random distribution. Internally, presence absence celltypes determined based antimode celltype density distribution. Spotwise comparisons groupwise comparisons increasing distances possible. Thereby, distance = 0 corresponds spotwise approach, distance = 1 considers hexagonal rings spots around spot distance = 2 refers two rings spots around spot.","code":"spacedeconv::cell_pair_localization(deconv, method = \"epic\", cell_type_1 = \"epic_NK.cell\", cell_type_2 = \"epic_B.cell\", density = TRUE, distance = 0) #> [1] \"Calculating Antimode cutoffs\" #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails #>       coloc.coloc           coloc_p   coloc_rand_mean coloc_ratio.coloc  #>      0.0000000000      0.1100000000      0.0001012658      0.0000000000  #>       avoid.avoid           avoid_p   avoid_rand_mean avoid_ratio.avoid  #>      0.0109704641      0.0000000000      0.0108945148      1.0069713400"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_colocalization.html","id":"riples_k","dir":"Articles","previous_headings":"Available colocalization functions","what":"2. ‘riples_k()’","title":"Colocalization","text":"Determines spatial distribution celltype based Ripley´s K function. matrix presence absence values celltype, determined using antimode celltype density distribution, internally taken input.","code":"spacedeconv::ripleys_k(deconv, method = \"epic\", cell_type = \"epic_B.cell\") #> [1] \"Calculating Antimode cutoffs\" #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails  #> Warning in locmodes(logscore, mod0 = 2, display = F): If the density function #> has an unbounded support, artificial modes may have been created in the tails"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data Input","text":"spacedeconv integrates first- second-generation deconvolution algorithms transcriptome data. first-generation tools deconvolute based internal precomputed signatures, second-generation deconvolution tools compute cell type specific expression signatures annotated single-cell expression data. following requirements workflow details types data explained detail.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Data Input","text":"spacedeconv contains 4 different spatial datasets obtained 10XVisium platform. Additionally 4 matching scRNA-seq datasets available can used calculate custom expression signatures. data can loaded like :","code":"library(spacedeconv) data(\"single_cell_data_1\") data(\"single_cell_data_2\") data(\"single_cell_data_3\") data(\"single_cell_data_4\") data(\"spatial_data_1\") data(\"spatial_data_2\") data(\"spatial_data_3\") data(\"spatial_data_4\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"reference-data","dir":"Articles","previous_headings":"","what":"Reference Data","title":"Data Input","text":"build cell-type specific signatures second-generation deconvolution spacedeconv utilized annotated single-cell reference data. single cell data needs include cell-type annotations can one following formats: SingleCellExperiment (recommended) AnnData Seurat Cell type information needs available. can specify column containing annotation cell_type_col parameter. applies batch ID information required MuSiC, SCDC, BSeq-sc, CDSeq CARD parameter batch_id_col.","code":"signature <- build_model(single_cell_data_1,   method = \"dwls\",   cell_type_col = \"celltype_major\", )  # some methods require batch_id information as well sigature <- build_model(single_cell_data_1,   method = \"scdc\",   cell_type_col = \"celltype_major\",   batch_id_col = \"orig.ident\" )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"spatial-data","dir":"Articles","previous_headings":"","what":"Spatial Data","title":"Data Input","text":"Spatially resolved data needs available SpatialExperiment format. 10XVisium slides data can loaded easily providing path directory create SpaceRanger. information data loading manual object construction can found SpatialExperiment Vignette. Spatial data available Seurat Object can converted SpatialExperiment:","code":"spe <- SpatialExperiment::read10xVisium(path_to_directory) spe <- seurat_to_spatialexperiment(seurat_object)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"normalization","dir":"Articles","previous_headings":"","what":"Normalization","title":"Data Input","text":"SpaceDeconv offers additional function convenient normalization SpatialExperiments. normalization saved new assay, make sure correct data used deconvolution providing desired assay parameters assay_sc assay_sp. normalization method cpm logcpm available.","code":"spe <- normalize(spe, method = \"cpm\")  # make sure to use cpm assay in deconvolution step deconvolution <- deconvolute(spe, method = \"quantiseq\", assay_sp = \"cpm\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"image-alignment","dir":"Articles","previous_headings":"","what":"Image Alignment","title":"Data Input","text":"case background image aligned properly SpatialExperiment class offers convenient functions rotation / mirroring: rotateImg(image, degrees) mirrorImg(image, axis) # 'h'/'v' Information available SpatialExperiment Documentation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"sample-data","dir":"Articles","previous_headings":"","what":"Sample Data","title":"Example","text":"tutorial use one spacedeconvs sample dataset deconvolution algorithm “SCDC”.","code":"library(spacedeconv) library(SpatialExperiment)  data(\"single_cell_data_3\") data(\"spatial_data_3\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"preprocessing-and-normalization","dir":"Articles","previous_headings":"","what":"Preprocessing and Normalization","title":"Example","text":"get first insight data type dataset name terminal: can see single-cell data available SingleCellExperiment. total dataset includes expression values 29733 genes 7986 cells. can seen cell type information available colData cell related annotation stored. next step normalize data cpm (“Counts Per Million”). normalization stored additional assay single-cell object.","code":"single_cell_data_3 #> class: SingleCellExperiment  #> dim: 29733 7986  #> metadata(1): Samples #> assays(1): counts #> rownames(29733): RP11-34P13.7 FO538757.3 ... KRTAP9-2 IGLVIV-66-1 #> rowData names(1): ID #> colnames(7986): CID44971_AAGCCGCCACGCATCG CID44971_AAGGAGCTCAACACAC ... #>   CID44971_TTTCCTCCAAGCCATT CID44971_TTTGGTTGTATCACCA #> colData names(10): Sample Barcode ... celltype_minor celltype_major #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0):  # for performance reasons we are subsampling the data  single_cell_data_3 <- subsetSCE(single_cell_data_3, cell_type_col = \"celltype_major\", ncells = 180) #> ── spacedeconv ───────────────────────────────────────────────────────────────── #>  [36mℹ [39m testing parameter #>  [36mℹ [39m Set seed to 12345 #>  [36mℹ [39m testing parameter  [32m✔ [39m parameter OK  [38;5;249m[36ms] [39m #>  #>  [36mℹ [39m extracting up to 180 cells #>  [32m✔ [39m extracting up to 180 cells  [38;5;249m[282ms] [39m #>  #>  [36mℹ [39m extracted 180 cells #>  [32m✔ [39m extracted 180 cells  [38;5;249m[37ms] [39m single_cell_data_3 <- spacedeconv::preprocess(single_cell_data_3) #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [159ms] #>  #> ℹ Removing 0 observations with umi count below threshold #> ✔ Removed 0 observations with umi count below threshold [1.4s] #>  #> ℹ Removing 12976 variables with all zero expression #> ✔ Removed 12976 variables with all zero expression [16ms] #>  spatial_data_3 <- spacedeconv::preprocess(spatial_data_3) #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [52ms] #>  #> ℹ Removing 137 observations with umi count below threshold #> ✔ Removed 137 observations with umi count below threshold [268ms] #>  #> ℹ Removing 13049 variables with all zero expression #> ✔ Removed 13049 variables with all zero expression [15ms] #>   single_cell_data_3 <- spacedeconv::normalize(single_cell_data_3, method = \"cpm\") #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [34ms] #>  #> ℹ Normalizing using cpm #> ✔ Finished normalization using cpm [215ms] #>  #> ℹ Please note the normalization is stored in an additional assay spatial_data_3 <- spacedeconv::normalize(spatial_data_3, method = \"cpm\") #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [31ms] #>  #> ℹ Normalizing using cpm #> ✔ Finished normalization using cpm [3.5s] #>  #> ℹ Please note the normalization is stored in an additional assay"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"build-model","dir":"Articles","previous_headings":"","what":"Build Model","title":"Example","text":"build model need provide single cell expression object annotated cell type information. Let’s look object see annotation available. three different resolutions cell type annotation available. tutorial choose \"celltype_major\" cell type annotation includes 9 different cell-types. Next can calculate signature using annotated single-data deconvolution tool “spatialDWLS”. signature contains expression values celltypes subset distinctly expressed genes. following example shows first 10 rows signature calculated previous step.","code":"names(colData(single_cell_data_3)) #>  [1] \"Sample\"          \"Barcode\"         \"orig.ident\"      \"nCount_RNA\"      #>  [5] \"nFeature_RNA\"    \"percent.mito\"    \"subtype\"         \"celltype_subset\" #>  [9] \"celltype_minor\"  \"celltype_major\" signature <- spacedeconv::build_model(   single_cell_obj = single_cell_data_3,   cell_type_col = \"celltype_major\",   method = \"card\" ) knitr::kable(round(signature[1:10, ], 4))"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"deconvolution","dir":"Articles","previous_headings":"","what":"Deconvolution","title":"Example","text":"deconvolute Visium slide use signature just calculated. Depending selected deconvolution tool parameters need passed, case cell_type_col batch_id_col well scRNA-seq reference dataset.","code":"deconv <- spacedeconv::deconvolute(   spatial_obj = spatial_data_3,   single_cell_obj = single_cell_data_3,   cell_type_col = \"celltype_major\",   method = \"card\",   batch_id_col = \"orig.ident\",   assay_sp = \"cpm\",   assay_sc = \"cpm\" ) #> ## QC on scRNASeq dataset! ... #> No cell types selected, we will use all the cell types in the scRNA-seq data #> ## QC on spatially-resolved dataset! ... #> ## create reference matrix from scRNASeq... #> ## Select Informative Genes! ... #> ## Deconvolution Starts! ... #> ## Deconvolution Finish! ..."},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Example","text":"deconvolution results stored spatial object simplify visualizations. spacedeconv offers 6 visualization functions different scopes, explained visualization vignette. can see available deconvolution results using available_results(deconv) accessing objects colData: Spot estimated cell fraction available object annotation can used visualizations.","code":"available_results(deconv) #> [1] \"card_B.cells\"           \"card_CAFs\"              \"card_Cancer.Epithelial\" #> [4] \"card_Endothelial\"       \"card_Myeloid\"           \"card_Normal.Epithelial\" #> [7] \"card_Plasmablasts\"      \"card_PVL\"               \"card_T.cells\" # plot all available results: provide the tool as parameter spacedeconv::plot_celltype(deconv,   cell_type = \"card\",   density = FALSE,   smooth = T,   title_size = 12 ) # ... or plot a specific result spacedeconv::plot_celltype(deconv,   cell_type = \"card_Cancer.Epithelial\",   density = FALSE,   smooth = T,   title_size = 12 )"},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"my-spatialexperiment-contains-ensembl-ids--can-i-still-perform-deconvolution","dir":"Articles","previous_headings":"FAQ","what":"My SpatialExperiment contains ENSEMBL IDs. Can i still perform deconvolution?","title":"FAQ","text":"possible perform second-generation deconvolution algorithms annotated scRNA-seq data containing ENSEMBL IDs available. first-gen deconvolution tools require HGNC symbols. may also check SpatialExperiment rowData() available annotation overwrite ENSEMBL IDs. cases can solved using following code:","code":"rownames(spe) <- rowData(spe)$symbol"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"how-can-i-see-which-deconvolution-results-are-available-in-my-object","dir":"Articles","previous_headings":"FAQ","what":"How can i see which deconvolution results are available in my object?","title":"FAQ","text":"can use available_results(object) access names(colData(object)) see deconvolution results available.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"the-spacedeconv-plots-contain-a-lot-of-white-spots","dir":"Articles","previous_headings":"FAQ","what":"The spacedeconv plots contain a lot of white spots","title":"FAQ","text":"reading raw spatial data SpatialExperiment contains expression information spots, even located tissue. Remove spots following code","code":"spe <- spe[, colData(spe)$in_tissue == TRUE]"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"the-visium-slide-and-the-spatial-data-are-not-rotated-in-the-same-direction","dir":"Articles","previous_headings":"FAQ","what":"The Visium Slide and the spatial data are not rotated in the same direction","title":"FAQ","text":"SpatialExperiment wrapper includes function rotate/mirror image. information can found Visualization Vignette SpatialExperiment Documentation.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"the-hexagons-in-my-plots-are-rotated-and-dont-give-an-even-appearance","dir":"Articles","previous_headings":"FAQ","what":"The hexagons in my plots are rotated and don’t give an even appearance","title":"FAQ","text":"Visium slide might aligned incorrectly. Try rotating image use offset_rotation=TRUE parameter plotting function.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"which-deconvolution-tools-are-available","dir":"Articles","previous_headings":"FAQ","what":"Which deconvolution tools are available?","title":"FAQ","text":"list includes methods name internally used tokens. detailed descriptions method can found end vignette.","code":"spacedeconv::deconvolution_methods ## The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, ## which was just loaded, will retire in October 2023. ## Please refer to R-spatial evolution reports for details, especially ## https://r-spatial.org/r/2023/05/15/evolution4.html. ## It may be desirable to make the sf package available; ## package maintainers should consider adding sf to Suggests:. ## The sp package is now running under evolution status 2 ##      (status 2 uses the sf package in place of rgdal) ## Configuring package 'spacedeconv': please wait ... ## Done! ##             RCTD        SPOTlight             CARD      spatialDWLS  ##           \"rctd\"      \"spotlight\"           \"card\"    \"spatialdwls\"  ##    cell2location        AutoGeneS       BayesPrism           Bisque  ##  \"cell2location\"      \"autogenes\"     \"bayesprism\"         \"bisque\"  ##          BSeq-sc       CIBERSORTx            CDSeq              CPM  ##         \"bseqsc\"     \"cibersortx\"          \"cdseq\"            \"cpm\"  ##             DWLS             MOMF            MuSiC           Scaden  ##           \"dwls\"           \"momf\"          \"music\"         \"scaden\"  ##             SCDC       MCPcounter             EPIC        quanTIseq  ##           \"scdc\"    \"mcp_counter\"           \"epic\"      \"quantiseq\"  ##            xCell        CIBERSORT CIBERSORT (abs.)            TIMER  ##          \"xcell\"      \"cibersort\"  \"cibersort_abs\"          \"timer\"  ##     ConsensusTME             ABIS         ESTIMATE      mMCPcounter  ##  \"consensus_tme\"           \"abis\"       \"estimate\"   \"mmcp_counter\"  ##        seqImmuCC              DCQ             BASE  ##      \"seqimmucc\"            \"dcq\"           \"base\""},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_metacell.html","id":"clean-genes-and-cells","dir":"Articles","previous_headings":"","what":"Clean Genes and Cells","title":"Metacell","text":"first step filters dataset remove low quality genes cells. possible manually remove genes dataset set specific UMI cutoffs. instructions please view functions documentation.","code":"filtered <- clean_genes_and_cells(ad) #> ── metacell ──────────────────────────────────────────────────────────────────── #> ℹ Cleaning genes and cells #> python:         /home/runner/.local/share/r-miniconda/envs/r-omnideconv/bin/python #> libpython:      /home/runner/.local/share/r-miniconda/envs/r-omnideconv/lib/libpython3.8.so #> pythonhome:     /home/runner/.local/share/r-miniconda/envs/r-omnideconv:/home/runner/.local/share/r-miniconda/envs/r-omnideconv #> version:        3.8.17 | packaged by conda-forge | (default, Jun 16 2023, 07:06:00)  [GCC 11.4.0] #> numpy:          /home/runner/.local/share/r-miniconda/envs/r-omnideconv/lib/python3.8/site-packages/numpy #> numpy_version:  1.23.5 #>  #> NOTE: Python version was forced by RETICULATE_PYTHON #> ✔ Cleaned genes and cells [27.8s] #>"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_metacell.html","id":"optional-compute-forbidden-genes","dir":"Articles","previous_headings":"","what":"(optional) compute forbidden genes","title":"Metacell","text":"function finds genes dataset included metacells calculated hardcoded gene patterns. function returns list genes can used input metacell computation step. addition gene modules calculated stored single cell object used third step workflow.","code":"suspect_genes <- compute_forbidden_genes(filtered) #> ── metacell ──────────────────────────────────────────────────────────────────── #> ℹ Computing forbidden genes #> ✔ Computed forbidden genes [1.2s] #>"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_metacell.html","id":"optional-extract-forbidden-genes-from-gene-modules","dir":"Articles","previous_headings":"","what":"(optional) extract forbidden genes from gene modules","title":"Metacell","text":"functions genes unsuited gene modules extracted. just provide list unsuited gene modules function returns improved list forbidden genes can used input last step workflow.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_metacell.html","id":"todo","dir":"Articles","previous_headings":"(optional) extract forbidden genes from gene modules","what":"TODO","title":"Metacell","text":"plots instructions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_metacell.html","id":"compute-metacells","dir":"Articles","previous_headings":"","what":"Compute Metacells","title":"Metacell","text":"function uses filtered single cell data optional forbidden genes calculate metacells. Since metacells don’t cell type annotation reannotate metacells based original single cell data using cell type column name provide. possible select AbundanceScore subset metacells. Abundance Score quantifies purity metacells, namely percentage “Abundant cell” metacell compared cells. every cell merged metacell cell type original dataset. Using Abundance Score keep metacells 90% purity values can used well.","code":"metacells <- compute_metacells(filtered, suspect_genes,   cell_type_col = \"celltype_major\",   abundance_score = 0.9 ) #> ── metacell ──────────────────────────────────────────────────────────────────── #> ℹ Computing metacells #> Removing 1 metacell with abundance score under 0.9 #> ✔ computed metacells [2.9s] #>"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_metacell.html","id":"the-result","dir":"Articles","previous_headings":"","what":"The result","title":"Metacell","text":"Input dataset reduced size drastically now contains 30 cells robust expression information. new celltype annotation stored “celltype” column. column “grouped” contains number cells merged metacell “percentage” column stores abundanceScore metacell.","code":"metacells #> class: SingleCellExperiment  #> dim: 22299 32  #> metadata(1): __name__ #> assays(3): counts scaled round #> rownames(22299): RP11-34P13.7 FO538757.3 ... CTD-3222D19.10 #>   CTC-273B12.7 #> rowData names(5): excluded_gene clean_gene forbidden_gene #>   pre_feature_gene feature_gene #> colnames(32): 0 1 ... 31 32 #> colData names(5): grouped pile candidate celltype percentage #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0):"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"available-visualizations","dir":"Articles","previous_headings":"","what":"Available Visualizations","title":"spacedeconv Visualization","text":"moment spacedeconv offers two visualization functions. plot_celltype() visualizes spatial image color coded cell type fractions one cell type. plot_gene() plot spatial gene expression. plot_umi_count() Plots number sequenced reads per spot. plot_most_abundant() Render plot containing abundant cell-type spot. plot_celltype_presence() Plot presence (thresholded) single cell-type. plot_comparison() Plot comparison two cell-type fractions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_celltype","dir":"Articles","previous_headings":"Available Visualizations","what":"1. plot_celltype()","title":"spacedeconv Visualization","text":"Plot spot annotation continuous discrete scale. spot annotation needs colData(spe), manual annotation can added SpatialExperiment object visualization.","code":"spacedeconv::plot_celltype(deconv, cell_type = \"epic_B.cell\", density = F, smooth = T)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_gene","dir":"Articles","previous_headings":"Available Visualizations","what":"2. plot_gene()","title":"spacedeconv Visualization","text":"Plot gene expression spatial level. may make sense smooth plot simplify detection expression patterns. can select assay using assay parameter.","code":"spacedeconv::plot_gene(deconv, gene = \"AKT1\", density = F, smooth = T)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_umi_count","dir":"Articles","previous_headings":"Available Visualizations","what":"3. plot_umi_count()","title":"spacedeconv Visualization","text":"plot shows number detected UMIs spot. recommend rendering plot transform_scale = \"sqrt\" due large range UMI count values.","code":"spacedeconv::plot_umi_count(deconv, transform_scale = \"sqrt\", density = F, smooth = T)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_most_abundant","dir":"Articles","previous_headings":"Available Visualizations","what":"4. plot_most_abundant()","title":"spacedeconv Visualization","text":"plots displays abundant cell-type spot. can specify cells plot either one following: cell_type vector celltypes plot method plotting cell types provided method remove vector celltypes removed plot","code":"spacedeconv::plot_most_abundant(deconv,   method = \"epic\",   density = F,   title_size = 25,   legend_size = 15,   font_size = 10,   remove = c(\"epic_uncharacterized.cell\") )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_celltype_presence","dir":"Articles","previous_headings":"Available Visualizations","what":"5. plot_celltype_presence()","title":"spacedeconv Visualization","text":"access presence single cell-type use thresholded plot_celltype_presence() function. deconvolution result larger provided threshold spot marked detected (“TRUE”). threshold provided, specific thresholds celltype calculated internally based antimode celltype density distribution.","code":"spacedeconv::plot_celltype_presence(deconv,   cell_type = \"epic_B.cell\",   threshold = 0.05,   show_image = T )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_comparison","dir":"Articles","previous_headings":"Available Visualizations","what":"6. plot_comparison()","title":"spacedeconv Visualization","text":"Use function plot ratio deconvolution results two cell-types.","code":"spacedeconv::plot_comparison(deconv,   cell_type_1 = \"epic_T.cell.CD4.\",   cell_type_2 = \"epic_T.cell.CD8.\",   palette = \"Vik\",   density = F,   smooth = T, )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"color-palette","dir":"Articles","previous_headings":"","what":"Color Palette","title":"spacedeconv Visualization","text":"palettes colorspace R Package can used.","code":"colorspace::hcl_palettes(plot = TRUE)"},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"image-alignment-offset","dir":"Articles","previous_headings":"Further plot adjustments","what":"Image Alignment Offset","title":"spacedeconv Visualization","text":"spacedeconvs Visualization function designed work data SpaceRanger >= V2.0. Since Version image rotated default hourglass fiducial upper left corner. Previous SpaceRanger results can rotated differently. rotation additionally reflects angle spots slide. Uncorrectly rotated images result hexagons rotated 30 degrees. compensate can use offset_rotation parameter correct hexagon alignment. necessary Visium slides hourglass fiducial bottom left upper right corner.","code":"plot_umi_count(deconv, offset_rotation = T) # rotate hexagons"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"transform-scale","dir":"Articles","previous_headings":"Further plot adjustments","what":"Transform Scale","title":"spacedeconv Visualization","text":"transform_scale parameter colorspace scale can modified. Available options : “ln”, “log10”, “log2” “sqrt”. Scaling color range differently can aid interpreting plot. Please mind plot show valid deconvolution results anymore handled caution.","code":"spacedeconv::plot_umi_count(deconv, transform_scale = \"sqrt\", density = FALSE)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"smooth","dir":"Articles","previous_headings":"Further plot adjustments","what":"Smooth","title":"spacedeconv Visualization","text":"parameter expression values can smoothed simplify pattern recognition. smoother utilizes linear kernel size calculated multiplying spot distance smoothing factor. mentioned operation changes deconvolution result final plots appling kernel, interpreted helpful visualization option deconvolution result. smooth=T enable smoothing smoothing_factor choose kernel size (factor spot distance)","code":"spacedeconv::plot_celltype(deconv,   cell_type = \"epic_B.cell\",   smooth = T,   smoothing_factor = 1.5,   density = FALSE )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"density-distribution","dir":"Articles","previous_headings":"Further plot adjustments","what":"Density Distribution","title":"spacedeconv Visualization","text":"can add density distribution setting density = TRUE. red line corresponds mean distribution.","code":"spacedeconv::plot_celltype(deconv,   cell_type = \"epic_B.cell\",   smooth = TRUE,   density = TRUE,   title_size = 20,   legend_size = 15,   font_size = 10 )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"save-plots","dir":"Articles","previous_headings":"Further plot adjustments","what":"Save Plots","title":"spacedeconv Visualization","text":"can save plot setting save=TRUE. Specify file path path parameter. path provided plots stored ~/spacedeconvResults/. change size rendered plot use png_width png_height set plot size pixels. Plots saved png.","code":"spacedeconv::plot_celltype(deconv,   cell_type = \"epic_B.cell\",   smooth = TRUE,   density = TRUE,   save = TRUE,   path = \"~/project/results\",   png_width = 1000,   png_height = 750 )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"aggregate-cell-types","dir":"Articles","previous_headings":"Further plot adjustments","what":"Aggregate cell types","title":"spacedeconv Visualization","text":"Aggregate cell types using aggregate function. Internall deconvolution results summed get new name. aggregation can visualized available plotting functions.","code":"spe <- aggregate(spe, cell_type_1, cell_type_2, newName)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"additional-parameters","dir":"Articles","previous_headings":"","what":"Additional Parameters","title":"spacedeconv Visualization","text":"show_image logical, show remove spatial image spot_size integer, increase (>1) decrease (<1) hexagon size limits vector containing upper lower limits color scale palette_type “discrete”, “sequential” “divergent”, scale color´ reverse_palette reverse color palette font_size font size legend title_size font size title legend_size legend title set custom title","code":""},{"path":"https://omnideconv.github.io/spacedeconv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Constantin Zackl. Author, maintainer.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zackl C (2023). spacedeconv: Unified Interface spatial transcriptomics deconvolution tools. R package version 0.0.1.0000.","code":"@Manual{,   title = {spacedeconv: Unified Interface to spatial transcriptomics deconvolution tools},   author = {Constantin Zackl},   year = {2023},   note = {R package version 0.0.1.0000}, }"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"rocket-spacedeconv-","dir":"","previous_headings":"","what":"Unified Interface to spatial transcriptomics deconvolution tools","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"spacedeconv unified interface 31 deconvolution tools focus spatial transcriptomics datasets. package able directly estimate celltype proportions immune cells can deconvolute celltype annotation single-cell reference dataset available.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"arrow_down-installation","dir":"","previous_headings":"","what":"⬇️ Installation","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"spacedeconv available GitHub . recommend installing trough pak package manager:","code":"# install the pak package manager install.packages(\"pak\")  pak::pkg_install(\"omnideconv/spacedeconv\", dependencies=TRUE)"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"sparkles-features","dir":"","previous_headings":"","what":"✨ Features","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"access 31 deconvolution tools X direct deconvolution immune cells compute custom reference signatures deconvolute celltype flexible visualization functions resource optimization metacell … easy integration spatial transcriptomics workflows","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"floppy_disk-data-requirements","dir":"","previous_headings":"","what":"💾 Data requirements","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"Spatial transcriptomics data: SpatialExperiment Single-cell data cell-type annotation: SingleCellExperiment (recommended), anndata Seurat","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"technologist-usage","dir":"","previous_headings":"","what":"🧑‍💻 Usage","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"main workflow consists : Reference signature computation using annotated single-cell data Deconvolution Visualization","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"id_1-build-a-signature-matrix","dir":"","previous_headings":"🧑‍💻 Usage","what":"1. Build a Signature Matrix","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"Build cell type specific signature matrix annotated single-cell reference data.","code":"signature <- spacedeconv::build_model(   single_cell_object,   cell_type_col = \"celltype_major\",   method = \"spotlight\",   assay_sc=\"cpm\" )"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"id_2-deconvolution","dir":"","previous_headings":"🧑‍💻 Usage","what":"2. Deconvolution","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"methods able directly estimate immune cell abundances tools require custom reference signature computed step 1).","code":"result <- spacedeconv::deconvolute(   spatial_object,   signature,   method = \"spotlight\" )"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"id_3-visualization","dir":"","previous_headings":"🧑‍💻 Usage","what":"3. Visualization","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"spacedeconv includes highly-flexible visualization functions. full explanation visualization options can found visualization vignette.","code":"plot_celltype(spe, cell_type=\"spotlight_B.cells\")"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"bulb-additional-requirements","dir":"","previous_headings":"","what":"💡 Additional Requirements","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"methods require additional software/tokens, exceptions: working version Docker required CIBERSORTx token CIBERSORTx required website: https://cibersortx.stanford.edu/ CIBERSORT source code required BSeq-sc (see tutorial ?omnideconv::bseqsc_config) SpatialExperiment requires magick installed: sudo apt-get install libmagick++-dev","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"available-methods-licenses-citations","dir":"","previous_headings":"","what":"Available methods, Licenses, Citations","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"Note , spacedeconv free (GPL 3.0), may need obtain license use individual methods. See table information. use package work, please cite package method(s) using.","code":""},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/reference/addResultToObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Add results to object colData — addResultToObject","title":"Add results to object colData — addResultToObject","text":"Add results object colData","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/addResultToObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add results to object colData — addResultToObject","text":"","code":"addResultToObject(spatial_obj, result)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/addResultToObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add results to object colData — addResultToObject","text":"spatial_obj SpatialExperiment result deconvolution result, rows = spots, columns = cell types","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/aggregate_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Deconvolution results — aggregate_results","title":"Aggregate Deconvolution results — aggregate_results","text":"Aggregate deconvolution results merging result columns spatial object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/aggregate_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Deconvolution results — aggregate_results","text":"","code":"aggregate_results(   spatial_obj = NULL,   cell_type_1 = NULL,   cell_type_2 = NULL,   name = NULL,   remove = FALSE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/aggregate_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Deconvolution results — aggregate_results","text":"spatial_obj SpatialExperiment containing deconvolution results cell_type_1 cell type aggregate, including method \"method_celltype\" cell_type_2 cell type aggregate, including method \"method_celltype\" name new name aggregation remove logical, remove provided cell types just keep aggregation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/aggregate_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Deconvolution results — aggregate_results","text":"SpatialObject containing aggregation provided cell types","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"Convert AnnData SingleCellExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"","code":"anndata_to_singlecellexperiment(ad)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"ad AnnData object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"SingleCellObject Thanks Omnideconv","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_spatialexperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SpatialExperiment to AnnData — anndata_to_spatialexperiment","title":"Convert SpatialExperiment to AnnData — anndata_to_spatialexperiment","text":"Convert SpatialExperiment AnnData","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_spatialexperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SpatialExperiment to AnnData — anndata_to_spatialexperiment","text":"","code":"anndata_to_spatialexperiment()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/annotate_spots.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate spots — annotate_spots","title":"Annotate spots — annotate_spots","text":"Annotate spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/annotate_spots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate spots — annotate_spots","text":"","code":"annotate_spots(   spe,   spots,   value_pos = TRUE,   value_neg = FALSE,   name = \"annotation\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/annotate_spots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate spots — annotate_spots","text":"spe SpatialExperiment spots list spots annotate value_pos positive value value_neg negative value name name annotation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/annotate_spots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate spots — annotate_spots","text":"SpatialExperiment containing annotation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/antimode_cutoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine threshold for celltype presence based on antimode of celltype density — antimode_cutoff","title":"Determine threshold for celltype presence based on antimode of celltype density — antimode_cutoff","text":"Determine threshold celltype presence based antimode celltype density","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/antimode_cutoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine threshold for celltype presence based on antimode of celltype density — antimode_cutoff","text":"","code":"antimode_cutoff(spe, method)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/antimode_cutoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine threshold for celltype presence based on antimode of celltype density — antimode_cutoff","text":"spe SpatialExperiment Object method deconvolution method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/antimode_cutoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine threshold for celltype presence based on antimode of celltype density — antimode_cutoff","text":"vector celltype specific cutoff values","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach method token to deconvolution result — attachToken","title":"Attach method token to deconvolution result — attachToken","text":"Rename Celltypes deconvolution result add method token","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach method token to deconvolution result — attachToken","text":"","code":"attachToken(deconvolution, token = \"deconv\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach method token to deconvolution result — attachToken","text":"deconvolution deconvolution result matrix token method name custom token","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach method token to deconvolution result — attachToken","text":"deconvolution result renamed celltypes","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/available_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","title":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","text":"Check wich deconvolutionr results available SpatialExperiment object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/available_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","text":"","code":"available_results(deconv, method = NULL)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/available_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","text":"deconv SpatialExperiment method deconvolution method (optional)","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_and_deconvolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model and Deconvolute in one step — build_and_deconvolute","title":"Build Model and Deconvolute in one step — build_and_deconvolute","text":"Build Model Deconvolute one step","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_and_deconvolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model and Deconvolute in one step — build_and_deconvolute","text":"","code":"build_and_deconvolute(   single_cell_obj,   spatial_obj,   method = NULL,   cell_type_col = \"cell_ontology_class\",   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   return_object = TRUE,   verbose = FALSE,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_and_deconvolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model and Deconvolute in one step — build_and_deconvolute","text":"single_cell_obj Single Cell Object containing reference data build model spatial_obj SpatialExperiment deconvoluted method deconvolution method cell_type_col column single_cell_obj containing cell type information batch_id_col column SpatialObject containing batch_id information assay_sc assay single cell object use, default = \"counts\" assay_sp assay spatialExperiment use, default = \"counts\" return_object true return anotation spatialExperiment, false return table verbose output information ... parameters passed selected function","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a reference signature — build_model","title":"Build a reference signature — build_model","text":"Build_model calculates reference signature annotated scRNA-seq expression data","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a reference signature — build_model","text":"","code":"build_model(   single_cell_obj,   cell_type_col = \"cell_ontology_class\",   method = NULL,   verbose = FALSE,   spatial_obj = NULL,   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a reference signature — build_model","text":"single_cell_obj Single-cell Object cell_type_col Name annotation column containing cell type information method Signature calculation Algorithm verbose Display information console spatial_obj SpatialExperiment, required SPOTlight batch_id_col column singleCellExperiment containing batch ids assay_sc assay single cell object use assay_sp assay spatial object use ... additional parameters passed functions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a reference signature — build_model","text":"cell-type specific expression signature","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_card.html","id":null,"dir":"Reference","previous_headings":"","what":"No signature calculated, just call the deconvolute method — build_model_card","title":"No signature calculated, just call the deconvolute method — build_model_card","text":"signature calculated, just call deconvolute method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No signature calculated, just call the deconvolute method — build_model_card","text":"","code":"build_model_card()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_cell2location.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model Cell2location — build_model_cell2location","title":"Build Model Cell2location — build_model_cell2location","text":"Build Model Cell2location","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_cell2location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model Cell2location — build_model_cell2location","text":"","code":"build_model_cell2location(   single_cell_obj,   epochs = 250,   assay_sc = \"counts\",   batch_id_col = \"sample_id\",   cell_type_col = \"celltype_major\",   cell_count_cutoff = 5,   cell_percentage_cutoff = 0.03,   nonz_mean_cutoff = 1.12,   gpu = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_cell2location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model Cell2location — build_model_cell2location","text":"single_cell_obj SingleCellExperiment containing reference expression epochs number epochs train network assay_sc assay extract batch_id_col batch_id_col column cell_type_col column single_cell_obj containing cell type labels cell_count_cutoff cell2location parameter cell_percentage_cutoff cell2location parameter nonz_mean_cutoff cell2location parameter gpu whether train GPU","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_immunedeconv.html","id":null,"dir":"Reference","previous_headings":"","what":"No signature calculated, just call the deconvolute method — build_model_immunedeconv","title":"No signature calculated, just call the deconvolute method — build_model_immunedeconv","text":"signature calculated, just call deconvolute method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_immunedeconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No signature calculated, just call the deconvolute method — build_model_immunedeconv","text":"","code":"build_model_immunedeconv()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Reference — build_model_omnideconv","title":"Build Reference — build_model_omnideconv","text":"Build Reference","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Reference — build_model_omnideconv","text":"","code":"build_model_omnideconv(   single_cell_obj,   cell_type_col = \"cell_ontology_class\",   method = NULL,   spatial_obj = NULL,   batch_id_col = NULL,   markers = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Reference — build_model_omnideconv","text":"single_cell_obj SingleCellExperiment cell_type_col column containing cell type annotation method select deconvolution method spatial_obj SpatialExperiment batch_id_col column single_cell_obj containing batch_ids markers List marker genes, used bseqsc assay_sc single cell assay use assay_sp spatial assay use ... additional parameters passed selected algorithm","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Reference — build_model_omnideconv","text":"Gene Expression signature NULL, methods export signatures","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_rctd.html","id":null,"dir":"Reference","previous_headings":"","what":"RCTD builds the model internally, please just use the deconvolute method — build_model_rctd","title":"RCTD builds the model internally, please just use the deconvolute method — build_model_rctd","text":"RCTD builds model internally, please just use deconvolute method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_rctd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RCTD builds the model internally, please just use the deconvolute method — build_model_rctd","text":"","code":"build_model_rctd()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spatial_dwls.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model Spatial DWLS — build_model_spatial_dwls","title":"Build Model Spatial DWLS — build_model_spatial_dwls","text":"Build Model Spatial DWLS","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spatial_dwls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model Spatial DWLS — build_model_spatial_dwls","text":"","code":"build_model_spatial_dwls(   single_cell_obj,   assay_sc = \"counts\",   marker_method = \"scran\",   topNgenes = 100,   cell_type_col = \"cell_ontology_class\",   dim_method = \"pca\",   cluster_method = \"leiden\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spatial_dwls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model Spatial DWLS — build_model_spatial_dwls","text":"single_cell_obj SingleCellExperiment assay_sc Single Cell Object assay use marker_method provide list marker genes method calculate markers (scran, gini, mast) topNgenes Number top ranked marker genes use cluster cell_type_col column single_cell_obj containing cell type information dim_method dimension reduction method cluster_method cluster method  use calculating marker genes ... additional paramters","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spotlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model SPOTlight — build_model_spotlight","title":"Build Model SPOTlight — build_model_spotlight","text":"Build Model SPOTlight","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spotlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model SPOTlight — build_model_spotlight","text":"","code":"build_model_spotlight(   single_cell_obj,   cell_type_col = \"cell_ontology_class\",   spatial_obj,   assay_sc = \"counts\",   assay_sp = \"counts\",   markers = NULL )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spotlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model SPOTlight — build_model_spotlight","text":"single_cell_obj SingleCellExperiment cell_type_col Column cell type information can found spatial_obj SpatialExperiment assay_sc single cell assay use assay_sp spatial assay use markers (Optional) Marker Gene DataFrame, NULL markers calculated 'single_cell_obj' based authors suggestion","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/cell_pair_localization.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Colocalization — cell_pair_localization","title":"Calculate Colocalization — cell_pair_localization","text":"Calculate Colocalization","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/cell_pair_localization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Colocalization — cell_pair_localization","text":"","code":"cell_pair_localization(   spe,   method = NULL,   distance = 0,   cell_type_1 = NULL,   cell_type_2 = NULL,   density = FALSE,   niter = 100,   presence = NULL )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/cell_pair_localization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Colocalization — cell_pair_localization","text":"spe SpatialExperiment method presence method distance distance spot diameter cell_type_1 celltype 1 cell_type_2 celltype 2 density logical niter permutations presence presence matrix available","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/cell_pair_localization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Colocalization — cell_pair_localization","text":"statistics graph","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Column exists in object — checkCol","title":"Check if Column exists in object — checkCol","text":"Check Column exists object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Column exists in object — checkCol","text":"","code":"checkCol(object, column)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Column exists in object — checkCol","text":"object SingleCellExperiment SpatialExperiment column column name check existence","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Column exists in object — checkCol","text":"column exists object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkENSEMBL.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for ENSEBL IDs — checkENSEMBL","title":"Check for ENSEBL IDs — checkENSEMBL","text":"Check ENSEBL IDs","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkENSEMBL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for ENSEBL IDs — checkENSEMBL","text":"","code":"checkENSEMBL(names)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkENSEMBL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for ENSEBL IDs — checkENSEMBL","text":"names vector rownames","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkENSEMBL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for ENSEBL IDs — checkENSEMBL","text":"TRUE ensembl","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Rowname/Colname Presence — checkRowColumn","title":"Check Rowname/Colname Presence — checkRowColumn","text":"Check Rowname Column Name existence expression objects","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Rowname/Colname Presence — checkRowColumn","text":"","code":"checkRowColumn(object)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Rowname/Colname Presence — checkRowColumn","text":"object SingleCellExperiment SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Rowname/Colname Presence — checkRowColumn","text":"boolean, TRUE one rownames/colnames NULL","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_and_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking and installing all dependencies for the specific methods — check_and_install","title":"Checking and installing all dependencies for the specific methods — check_and_install","text":"Checking installing dependencies specific methods","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_and_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking and installing all dependencies for the specific methods — check_and_install","text":"","code":"check_and_install(method)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_and_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking and installing all dependencies for the specific methods — check_and_install","text":"method name method used","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_datatype.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert assays to sparse Matrices — check_datatype","title":"Convert assays to sparse Matrices — check_datatype","text":"Convert assays sparse Matrices","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_datatype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert assays to sparse Matrices — check_datatype","text":"","code":"check_datatype(spe, assay = \"counts\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_datatype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert assays to sparse Matrices — check_datatype","text":"spe SpatialExperiment assay assay use","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_path_scaden.html","id":null,"dir":"Reference","previous_headings":"","what":"check if scaden can be found in the path variable — check_path_scaden","title":"check if scaden can be found in the path variable — check_path_scaden","text":"check scaden can found path variable","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_path_scaden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if scaden can be found in the path variable — check_path_scaden","text":"","code":"check_path_scaden()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/clean_genes_and_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Genes and Cells with Metacell2 — clean_genes_and_cells","title":"Clean Genes and Cells with Metacell2 — clean_genes_and_cells","text":"Clean Genes Cells Metacell2","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/clean_genes_and_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Genes and Cells with Metacell2 — clean_genes_and_cells","text":"","code":"clean_genes_and_cells(   anndata,   properly_sampled_min_cell_total = 800,   properly_sampled_max_cell_total = 8000,   properly_sampled_max_excluded_genes_fraction = 0.1,   exclude_genes = \"\",   exclude_gene_patterns = \"\",   seed = 123456 )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/clean_genes_and_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Genes and Cells with Metacell2 — clean_genes_and_cells","text":"anndata anndata object containing Single Cell Expression Data properly_sampled_min_cell_total exclude cells UMI count threshold properly_sampled_max_cell_total exclude cells UMI count threshold properly_sampled_max_excluded_genes_fraction exclude cells whose sum excluded data divided toal threshold exclude_genes gene names exlude exclude_gene_patterns gene patterns exclude seed seed reproducibilty","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster spacedeconv results — cluster","title":"Cluster spacedeconv results — cluster","text":"Cluster spacedeconv results","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster spacedeconv results — cluster","text":"","code":"cluster(   spe,   method = c(\"kmeans\", \"hclust\"),   data = c(\"deconvolution\", \"expression\", \"pathway\", \"tf\"),   dist_method = c(\"correlation\", \"euclidean\", \"maximum\", \"manhattan\", \"canberra\",     \"binary\", \"minkowski\"),   hclust_method = c(\"complete\", \"ward.D\", \"ward.D2\", \"single\", \"average\", \"mcquitty\",     \"median\", \"centroid\"),   nclusters = 3,   spmethod = NULL,   pca_dim = seq(1, 30),   clusres = 0.5,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster spacedeconv results — cluster","text":"spe SpatialExperiment method clustering method chosen kmeans hclust data data cluster dist_method distance measure used method = hclust hclust_method agglomeration method used method = hclust nclusters number clusters spmethod spatial method used fot clustering, must dorothea, progeny, expression name deconvolution method used pca_dim PCA dimensions used clustering expression data - Seurat::FindNeighbors clusres clustering resolution used clustering expression data - Seurat::FindClusters","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/coloc_avoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Colocalization of two celltypes — coloc_avoid","title":"Colocalization of two celltypes — coloc_avoid","text":"Colocalization two celltypes","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/coloc_avoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colocalization of two celltypes — coloc_avoid","text":"","code":"coloc_avoid(A, B)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/coloc_avoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colocalization of two celltypes — coloc_avoid","text":"presence cell type B presence cell type","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compare_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Signatures — compare_signatures","title":"Compare Signatures — compare_signatures","text":"Compare Signatures","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compare_signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Signatures — compare_signatures","text":"","code":"compare_signatures(signature1, signature2)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/compare_signatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Signatures — compare_signatures","text":"signature1 signature signature2 signature","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_decoupleR_activities.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pathway activities with decoupleR — compute_decoupleR_activities","title":"Compute Pathway activities with decoupleR — compute_decoupleR_activities","text":"Compute Pathway activities decoupleR","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_decoupleR_activities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pathway activities with decoupleR — compute_decoupleR_activities","text":"","code":"compute_decoupleR_activities(   spe,   reference,   method = \"wmean\",   assay = \"cpm\",   statistic = NULL,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_decoupleR_activities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pathway activities with decoupleR — compute_decoupleR_activities","text":"spe SpatialExperiment reference decoupleR reference method calculation method use assay assay use statistic select sub results case methods produce mutliple ones ... arguments passed methods","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_forbidden_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute forbidden genes — compute_forbidden_genes","title":"Compute forbidden genes — compute_forbidden_genes","text":"Compute forbidden genes","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_forbidden_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute forbidden genes — compute_forbidden_genes","text":"","code":"compute_forbidden_genes(   clean,   suspect_gene_names = \"\",   suspect_gene_patterns = \"\",   seed = 123456 )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_forbidden_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute forbidden genes — compute_forbidden_genes","text":"clean anndata object suspect_gene_names gene names might value suspect_gene_patterns gene patterns might value seed seed","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_metacells.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Metacells — compute_metacells","title":"Compute Metacells — compute_metacells","text":"Compute Metacells","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_metacells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Metacells — compute_metacells","text":"","code":"compute_metacells(   clean,   forbidden_gene_names,   cell_type_col,   target_size = 160000,   abundance_score = 0.9,   n_cores = NULL,   seed = 12345 )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/compute_metacells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Metacells — compute_metacells","text":"clean anndata object forbidden_gene_names list genes names used metacell base cell_type_col cell type column cleaned anndata, used reannotation target_size target UMI count per metacells abundance_score metacell celltype purity score n_cores number cores use seed seed","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"Convert Immunedeconv Matrix match spacedeconv Format","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"","code":"convertImmunedeconvMatrix(deconvResult)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"deconvResult immunedeconv result matrix","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"transformed matrix cell types columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convert_to_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Input Files to SingleCellExperiment — convert_to_sce","title":"Convert Input Files to SingleCellExperiment — convert_to_sce","text":"Convert Input Files SingleCellExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convert_to_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Input Files to SingleCellExperiment — convert_to_sce","text":"","code":"convert_to_sce(obj)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/convert_to_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Input Files to SingleCellExperiment — convert_to_sce","text":"obj object provided user, converted sce","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolution with spacedeconv — deconvolute","title":"Deconvolution with spacedeconv — deconvolute","text":"Perform cell type deconvolution spacedeconv.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolution with spacedeconv — deconvolute","text":"","code":"deconvolute(   spatial_obj,   signature = NULL,   single_cell_obj = NULL,   cell_type_col = \"cell_ontology_class\",   method = NULL,   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   return_object = TRUE,   verbose = FALSE,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolution with spacedeconv — deconvolute","text":"spatial_obj SpatialExperiment signature Gene Expression Signature single_cell_obj SingleCellExperiment cell_type_col Column name single_cell_obj cell type can found method Deconvolution Method use, see deconvolution_methods() full list available methods batch_id_col column name batch ids single cell object assay_sc single cell assay use computation assay_sp spatial assay use computation return_object Return Object result Table, TRUE = Object verbose display detailed information ... parameters passed selected deconvolution method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deconvolution with spacedeconv — deconvolute","text":"deconvolution result table","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deconvolution with spacedeconv — deconvolute","text":"","code":"# more examples can be found in the documentation website data(\"spatial_data_2\")  spatial_data_2 <- spacedeconv::preprocess(spatial_data_2) #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [89ms] #>  #> ℹ Removing 85 observations with umi count below threshold #> ✔ Removed 85 observations with umi count below threshold [1.7s] #>  #> ℹ Removing 13418 variables with all zero expression #> ✔ Removed 13418 variables with all zero expression [24ms] #>  spatial_data_2 <- spacedeconv::normalize(spatial_data_2) #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [26ms] #>  #> ℹ Normalizing using cpm #> ✔ Finished normalization using cpm [3.7s] #>  #> ℹ Please note the normalization is stored in an additional assay  deconvolution <- spacedeconv::deconvolute(   spatial_obj = spatial_data_2,   method = \"estimate\", ) #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [35ms] #>  #>  #>  #> ── Spatial  #> Assays: \"counts\" and \"cpm\" #> Genes: 23173 #> → without expression: 0 (0%) #> Spots: 1225 #> Spots under tissue: 1225 (100%) #> Median Genes Per Spot: 4795 #> → without expression: 0 (0%) #> Umi count range: 536 - 64683 #> Spots with UMI count below 500: 0 (0%) #> ✔ Rownames set #> ✔ Colnames set #> ℹ deconvoluting #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9317 genes (1095 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 135\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> ✔ finished [14.7s] #>"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_card.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute CARD — deconvolute_card","title":"Deconvolute CARD — deconvolute_card","text":"Deconvolute CARD","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute CARD — deconvolute_card","text":"","code":"deconvolute_card(   single_cell_obj,   spatial_obj,   cell_type_col = \"cell_ontology_class\",   assay_sc = \"counts\",   assay_sp = \"counts\",   batch_id_col = \"orig.ident\",   result_name = \"card\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_card.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute CARD — deconvolute_card","text":"single_cell_obj Single Cell Experiment spatial_obj Spatial Experiment cell_type_col column SCE containing cell type information assay_sc assay single_cell_obj use assay_sp assay spatial_obj use batch_id_col batch id column spatialExperiment result_name token identify deconvolution results object, default = \"card\"","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_cell2location.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Cell2location — deconvolute_cell2location","title":"Deconvolute Cell2location — deconvolute_cell2location","text":"Deconvolute Cell2location","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_cell2location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Cell2location — deconvolute_cell2location","text":"","code":"deconvolute_cell2location(   spatial_obj,   signature = NULL,   epochs = 30000,   n_cell = 10,   alpha = 20,   gpu = TRUE,   result_name = \"c2l\",   values = \"relative\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_cell2location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Cell2location — deconvolute_cell2location","text":"spatial_obj SpatialExperiment signature signature epochs training epochs model n_cell cell2location hyperparameter alpha cell2location hyperparameter gpu whether use nvidia gpu training result_name token identify deconvolution results object, default = \"card\" values relative absolute, default: relative","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Immundeconv — deconvolute_immunedeconv","title":"Deconvolute Immundeconv — deconvolute_immunedeconv","text":"Deconvolute Immundeconv","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Immundeconv — deconvolute_immunedeconv","text":"","code":"deconvolute_immunedeconv(   spatial_obj,   method = NULL,   assay_sp = \"counts\",   result_name = NULL,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Immundeconv — deconvolute_immunedeconv","text":"spatial_obj SpatialExperiment method deconvolution algorithm assay_sp assay spatial object use result_name token identify deconvolution results object, default = deconvolution method ... parameters passed selected method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv_mouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","title":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","text":"Deconvolute Immunedeconv mouse","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv_mouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","text":"","code":"deconvolute_immunedeconv_mouse(   spatial_obj,   method = NULL,   rmgenes = NULL,   algorithm = NULL,   assay_sp = \"counts\",   result_name = NULL,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv_mouse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","text":"spatial_obj SpatialExperiment method deconvolution algorithm rmgenes genes remove analysis algorithm statistical algorithm SeqImmuCC (ignored methods) assay_sp assay spatial object use result_name token identify deconvolution results object, default = deconvolution method ... additional parameters passed function","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_omnideconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Omnideconv — deconvolute_omnideconv","title":"Deconvolute Omnideconv — deconvolute_omnideconv","text":"Deconvolute Omnideconv","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_omnideconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Omnideconv — deconvolute_omnideconv","text":"","code":"deconvolute_omnideconv(   spatial_obj,   signature = NULL,   method = NULL,   single_cell_obj = NULL,   cell_type_col = \"cell_ontology_class\",   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   verbose = FALSE,   result_name = NULL,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_omnideconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Omnideconv — deconvolute_omnideconv","text":"spatial_obj SpatialExperiment signature signature matrix method omnideconv deconvolution method, see omnideconv::deconvolution_methods() details single_cell_obj Needed MOMF Bisque, either matrix cell type annotations cell_type_annotations parameter singleCellExperiment / AnnData cell_type_column_name specifies corresponding column cell type annotation located object cell_type_col column name single_cell_obj cell type information found batch_id_col column name single_cell_obj batch ids can found assay_sc single cell assay use assay_sp spatial assay use verbose Whether produce output console result_name token identify deconvolution results object, default = selected deconvolution method ... Additional parameters, passed selected method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_rctd.html","id":null,"dir":"Reference","previous_headings":"","what":"RCTD Deconvolution — deconvolute_rctd","title":"RCTD Deconvolution — deconvolute_rctd","text":"RCTD Deconvolution","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_rctd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RCTD Deconvolution — deconvolute_rctd","text":"","code":"deconvolute_rctd(   single_cell_obj,   cell_type_col,   spatial_obj,   assay_sc = \"counts\",   assay_sp = \"counts\",   n_umi_sc = NULL,   n_umi_sp = NULL,   n_cores = NULL,   result_name = \"rctd\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_rctd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RCTD Deconvolution — deconvolute_rctd","text":"single_cell_obj SingleCellExperiment cell_type_col Column containting cell type annotation spatial_obj SpatialExperiment assay_sc single cell assay use assay_sp spatial assay use n_umi_sc (optional) named list umi counts cell n_umi_sp (optional) named list umi counts spot n_cores Number CPU cores use calculation, NULL = use cores result_name token identify deconvolution results object, default = \"rctd\"","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spatial_dwls.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","title":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","text":"Deconvolute Spatial DWLS","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spatial_dwls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","text":"","code":"deconvolute_spatial_dwls(   spatial_obj,   signature,   assay_sp = \"counts\",   result_name = \"spatialdwls\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spatial_dwls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","text":"spatial_obj Spatial Experiment signature Signature assay_sp Assay SpatialExperiment use result_name token identify deconvolution results object, default = \"spatialdwls\" ... additional parameters","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spotlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute SPOTlight — deconvolute_spotlight","title":"Deconvolute SPOTlight — deconvolute_spotlight","text":"Deconvolute SPOTlight","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spotlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute SPOTlight — deconvolute_spotlight","text":"","code":"deconvolute_spotlight(   spatial_obj,   model = NULL,   assay_sp = \"counts\",   result_name = \"spotlight\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spotlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute SPOTlight — deconvolute_spotlight","text":"spatial_obj SpatialExperiment model SPOTlight Model assay_sp spatial assay use computation result_name token identify deconvolution results object, default = \"spotlight\"","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"List of supported deconvolution methods — deconvolution_methods","title":"List of supported deconvolution methods — deconvolution_methods","text":"List supported deconvolution methods","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of supported deconvolution methods — deconvolution_methods","text":"","code":"deconvolution_methods"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of supported deconvolution methods — deconvolution_methods","text":"object class character length 31.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of supported deconvolution methods — deconvolution_methods","text":"Spatial Algorithms RCTD, SPOTlight, CARD, spatialDWLS, Cell2Location Second-generation Algorithms (Omnideconv) AutoGeneS, BayesPrism, Bisque, BSeq-sc, CIBERSORTx, CDSeq, CPM, DWLS, MOMF, MuSiC, Scaden, SCDC First-generation Methods (Immunedeconv) MCPcounter, EPIC, quanTIseq, xCell, CIBERSORT, CIBERSORT (abs.), TIMER, ConsensusTME, ABIS, ESTIMATE First-generation Mouse Methods (Immunedeconv) mMCPcounter, seqImmuCC, DCQ, BASE object named vector. names correspond display name method, values internal name.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/doGiottoWorkflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","title":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","text":"Perform Giotto Workflow Normalization, HVG, Dimension Reduction Clustering","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/doGiottoWorkflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","text":"","code":"doGiottoWorkflow(   obj,   calculateHVG = TRUE,   dim_method = \"pca\",   cluster_method = \"leiden\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/doGiottoWorkflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","text":"obj Giotto Object calculateHVG Wheter calculate HVG dim_method dimension reduction method use: pca, tsne, umap cluster_method cluster method use c(leiden, kmeans, hclust, louvain)","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/extract_forbidden_from_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"extract forbidden genes from gene modules — extract_forbidden_from_modules","title":"extract forbidden genes from gene modules — extract_forbidden_from_modules","text":"extract forbidden genes gene modules","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/extract_forbidden_from_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract forbidden genes from gene modules — extract_forbidden_from_modules","text":"","code":"extract_forbidden_from_modules(clean, forbidden_modules)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/extract_forbidden_from_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract forbidden genes from gene modules — extract_forbidden_from_modules","text":"clean anndata object forbidden_modules gene modules remove","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/filter_sample_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter SPE to contain only one sample ID — filter_sample_id","title":"Filter SPE to contain only one sample ID — filter_sample_id","text":"Filter SPE contain one sample ID","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/filter_sample_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter SPE to contain only one sample ID — filter_sample_id","text":"","code":"filter_sample_id(spe, sample_id)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/filter_sample_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter SPE to contain only one sample ID — filter_sample_id","text":"spe SpatialExperiment sample_id sample_id","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMarkersSPOTlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Markers — getMarkersSPOTlight","title":"Calculate Markers — getMarkersSPOTlight","text":"Calculate Markers","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMarkersSPOTlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Markers — getMarkersSPOTlight","text":"","code":"getMarkersSPOTlight(single_cell_obj, cell_type_col = \"cell_ontology_class\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMarkersSPOTlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Markers — getMarkersSPOTlight","text":"single_cell_obj SingleCellExperiment cell_type_col Column containing cell type Procedure reflects suggestions SPOTlight authors, however, also state ways calculate markers","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":null,"dir":"Reference","previous_headings":"","what":"get matrices from SingleCellExperiment — getMatricesFromSCE","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"get matrices SingleCellExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"","code":"getMatricesFromSCE(single_cell_object, cell_type_col = \"cell_ontology_class\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"single_cell_object SingleCellExperiment cell_type_col column containing cell type","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"list containing expression matrix cell type annotation vector","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_cluster_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cluster features — get_cluster_features","title":"Get cluster features — get_cluster_features","text":"Get cluster features","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_cluster_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cluster features — get_cluster_features","text":"","code":"get_cluster_features(   spe,   clusterid = NULL,   topn = 3,   spmethod = NULL,   zscore = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_cluster_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cluster features — get_cluster_features","text":"spe spatialExperiment cluster results clusterid = name column clustering results topn number top features shown spmethod spatial method used fot clustering, must dorothea, progeny, expression name deconvolution method used zscore = results z-score scaled ","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_decoupleR_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a decoupleR reference — get_decoupleR_reference","title":"Obtain a decoupleR reference — get_decoupleR_reference","text":"Obtain decoupleR reference","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_decoupleR_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a decoupleR reference — get_decoupleR_reference","text":"","code":"get_decoupleR_reference(   method = \"progeny\",   organism = \"human\",   n_genes = 500,   confidence = NULL )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_decoupleR_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a decoupleR reference — get_decoupleR_reference","text":"method method use, progeny dorothea organism organism n_genes number genes return, progeny confidence condfidence level transcription factor reference, vector levels include","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_hex_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Hex Polygon Geometry — get_hex_polygon","title":"Build Hex Polygon Geometry — get_hex_polygon","text":"Build Hex Polygon Geometry","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_hex_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Hex Polygon Geometry — get_hex_polygon","text":"","code":"get_hex_polygon(x, y, dist, offset_rotation = FALSE)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_hex_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Hex Polygon Geometry — get_hex_polygon","text":"x coordinate y coordinate dist distance hexagons offset_rotation correct hex orientation rotated visium image","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_iniche.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Iniche recursivley — get_iniche","title":"Calculate Iniche recursivley — get_iniche","text":"Calculate Iniche recursivley","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_iniche.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Iniche recursivley — get_iniche","text":"","code":"get_iniche(df, coordinates, distance)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_iniche.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Iniche recursivley — get_iniche","text":"df dataframe array_row array_col coordinates vector (row, columns) distance spot distance","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_iniche.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Iniche recursivley — get_iniche","text":"list spot ids iniche","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_polygon_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Full Hexagon Set for provided spots — get_polygon_geometry","title":"Build Full Hexagon Set for provided spots — get_polygon_geometry","text":"Build Full Hexagon Set provided spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_polygon_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Full Hexagon Set for provided spots — get_polygon_geometry","text":"","code":"get_polygon_geometry(grid, dist, offset_rotation = FALSE)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_polygon_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Full Hexagon Set for provided spots — get_polygon_geometry","text":"grid Spot coordinates df format, extracted SpatialExperiment dist distance spots offset_rotation correct hex orientation rotated visium image","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_results_from_object.html","id":null,"dir":"Reference","previous_headings":"","what":"get deconvolution results from object — get_results_from_object","title":"get deconvolution results from object — get_results_from_object","text":"get deconvolution results object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_results_from_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get deconvolution results from object — get_results_from_object","text":"","code":"get_results_from_object(spatial_obj)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_results_from_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get deconvolution results from object — get_results_from_object","text":"spatial_obj SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_spot_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coordinates of spot id — get_spot_coordinates","title":"Get coordinates of spot id — get_spot_coordinates","text":"Get coordinates spot id","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_spot_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coordinates of spot id — get_spot_coordinates","text":"","code":"get_spot_coordinates(df, spotid)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_spot_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coordinates of spot id — get_spot_coordinates","text":"df colData dataframe spotid spotid","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/localization_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmaps cell pair localization and correlation of scores — localization_heatmap","title":"Heatmaps cell pair localization and correlation of scores — localization_heatmap","text":"Generates heatmap cell pair localization p-values correlation heatmap scores celltypes found deconvolution","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/localization_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmaps cell pair localization and correlation of scores — localization_heatmap","text":"","code":"localization_heatmap(   spe,   method,   distance = 0,   correlation = TRUE,   localization = TRUE,   matrix = FALSE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/localization_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmaps cell pair localization and correlation of scores — localization_heatmap","text":"spe SpatialExperiment object method deconvolution method distance size area interest correlation correlation heatmap based scores localization colocalization avoidance heatmap matrix matrix (TRUE/FALSE)","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/localization_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmaps cell pair localization and correlation of scores — localization_heatmap","text":"cell pair localization heatmap correlation heatmap","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/make_baseplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Render spatial hex plot — make_baseplot","title":"Render spatial hex plot — make_baseplot","text":"Render spatial hex plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/make_baseplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render spatial hex plot — make_baseplot","text":"","code":"make_baseplot(   spe,   df,   to_plot,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   reverse_palette = FALSE,   image_id = \"lowres\",   show_image = FALSE,   background = NULL,   palette_type = \"sequential\",   offset_rotation = FALSE,   spot_size = 1,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   title = NULL,   font_size = 15,   legend_size = 20,   density = TRUE,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750,   show_legend = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/make_baseplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render spatial hex plot — make_baseplot","text":"spe SpatialExperiment deconvolution results df containing annotation plotted to_plot column df plot palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample SpatialExperiment plotted reverse_palette reverse color palette image_id image id background image show_image whether show spatial image background custom background color palette_type \"discrete\", \"sequential\", \"diverging\" offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title title set custom title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px show_legend whether show legend","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Expression Object — normalize","title":"Normalize Expression Object — normalize","text":"Normalize Expression Object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Expression Object — normalize","text":"","code":"normalize(object, method = \"cpm\", assay = \"counts\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Expression Object — normalize","text":"object SingleCellExperiment method normalization method, (\"cpm\", \"logcpm\") assay assay use","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot deconvolution results — plot_celltype","title":"Function to plot deconvolution results — plot_celltype","text":"Generate Hex Plot SpatialExperiment containing deconvolution results","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot deconvolution results — plot_celltype","text":"","code":"plot_celltype(   spe,   cell_type = NULL,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   background = NULL,   palette_type = \"sequential\",   offset_rotation = FALSE,   spot_size = 1,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   title = NULL,   font_size = 15,   legend_size = 20,   density = TRUE,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750,   show_legend = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot deconvolution results — plot_celltype","text":"spe deconvolution result Form SpatialExperiment cell_type one celltype plot palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, whether display image, default = TRUE background background color palette_type discrete, sequential diverging offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title title set custom title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px show_legend whether show legend","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot deconvolution results — plot_celltype","text":"plot cell type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot deconvolution results — plot_celltype","text":"","code":"data(\"spatial_data_2\") deconv <- spacedeconv::deconvolute(spatial_data_2, method = \"estimate\") #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [54ms] #>  #>  #>  #> ── Spatial  #> Assays: \"counts\" #> Genes: 36591 #> → without expression: 13411 (36.65%) #> Spots: 1310 #> Spots under tissue: 1310 (100%) #> Median Genes Per Spot: 4613.5 #> → without expression: 15 (1.15%) #> Umi count range: 0 - 64683 #> Spots with UMI count below 500: 85 (0.23%) #> ✔ Rownames set #> ✔ Colnames set #> ℹ deconvoluting #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9969 genes (443 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 136\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> ✔ finished [15.1s] #>  spacedeconv::plot_celltype(deconv, cell_type = \"estimate_immune.score\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot celltype presence absence — plot_celltype_presence","title":"Plot celltype presence absence — plot_celltype_presence","text":"Plot celltype presence absence","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot celltype presence absence — plot_celltype_presence","text":"","code":"plot_celltype_presence(   spe,   cell_type = NULL,   threshold = NULL,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   background = NULL,   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   title = NULL,   font_size = 15,   legend_size = 20,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750,   show_legend = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot celltype presence absence — plot_celltype_presence","text":"spe deconvolution result Form SpatialExperiment cell_type celltype plot threshold fraction threshold, NULL: calculated internally palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette background custom background color show_image logical, wether display image, default = TRUE offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title title set custom title font_size font size legend legend_size legend size points save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px show_legend whether show legend","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot celltype presence absence — plot_celltype_presence","text":"plot celltypes presence/absence using threshold","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot celltype fraction comparison — plot_comparison","title":"Plot celltype fraction comparison — plot_comparison","text":"Plot celltype fraction comparison","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot celltype fraction comparison — plot_comparison","text":"","code":"plot_comparison(   spe,   cell_type_1 = NULL,   cell_type_2 = NULL,   palette = \"Blue-Red\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   background = NULL,   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   title = NULL,   font_size = 15,   legend_size = 20,   palette_type = \"diverging\",   density = TRUE,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750,   show_legend = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot celltype fraction comparison — plot_comparison","text":"spe deconvolution result Form SpatialExperiment cell_type_1 celltype plot cell_type_2 celltype plot palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette background custom background color show_image logical, wether display image, default = TRUE offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title title set custom title font_size font size legend legend_size legend size points palette_type \"discrete\", \"sequenatial\", \"diverging\" density whether display density distribution next spatial plot save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px show_legend whether show legend","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot celltype fraction comparison — plot_comparison","text":"plot celltypes presence/absence using threshold","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot gene expression — plot_gene","title":"Function to plot gene expression — plot_gene","text":"Generate Hex Plot SpatialExperiment containing deconvolution results","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot gene expression — plot_gene","text":"","code":"plot_gene(   spe,   gene = NULL,   assay = \"counts\",   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   background = NULL,   palette_type = \"sequential\",   offset_rotation = FALSE,   spot_size = 1,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   show_legend = TRUE,   title_size = 30,   title = NULL,   font_size = 15,   legend_size = 20,   density = TRUE,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750 )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot gene expression — plot_gene","text":"spe deconvolution result Form SpatialExperiment gene gene plot assay assay extract gene expression, default = \"counts\" palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, whether display image, default = TRUE background custom background color palette_type discrete, sequential diverging offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) show_legend whether show legend title_size font size title title set custom title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot gene expression — plot_gene","text":"plot cell type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot gene expression — plot_gene","text":"","code":"data(\"spatial_data_2\") deconv <- spacedeconv::deconvolute(spatial_data_2, method = \"estimate\") #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [41ms] #>  #>  #>  #> ── Spatial  #> Assays: \"counts\" #> Genes: 36591 #> → without expression: 13411 (36.65%) #> Spots: 1310 #> Spots under tissue: 1310 (100%) #> Median Genes Per Spot: 4613.5 #> → without expression: 15 (1.15%) #> Umi count range: 0 - 64683 #> Spots with UMI count below 500: 85 (0.23%) #> ✔ Rownames set #> ✔ Colnames set #> ℹ deconvoluting #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9969 genes (443 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 136\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> ✔ finished [11.5s] #>  spacedeconv::plot_celltype(deconv, cell_type = \"estimate_immune.score\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_metacell_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot metacell abundance score — plot_metacell_abundance","title":"Plot metacell abundance score — plot_metacell_abundance","text":"Plot metacell abundance score","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_metacell_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot metacell abundance score — plot_metacell_abundance","text":"","code":"plot_metacell_abundance(metacell)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_metacell_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot metacell abundance score — plot_metacell_abundance","text":"metacell SingleCellExperiment containing metacells","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_metacell_nCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the number of genes per metacells — plot_metacell_nCells","title":"Plot the number of genes per metacells — plot_metacell_nCells","text":"Plot number genes per metacells","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_metacell_nCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the number of genes per metacells — plot_metacell_nCells","text":"","code":"plot_metacell_nCells(metacell)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_metacell_nCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the number of genes per metacells — plot_metacell_nCells","text":"metacell SingleCellExperiment containing metacells","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot deconvolution results — plot_most_abundant","title":"Function to plot deconvolution results — plot_most_abundant","text":"Generate Hex Plot SpatialExperiment containing abundant cell types","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot deconvolution results — plot_most_abundant","text":"","code":"plot_most_abundant(   spe,   method = NULL,   cell_type = NULL,   remove = NULL,   min_spot = 20,   palette = \"Mako\",   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   background = NULL,   offset_rotation = FALSE,   spot_size = 1,   title_size = 30,   font_size = 15,   legend_size = 20,   density = TRUE,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750,   title = NULL,   show_legend = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot deconvolution results — plot_most_abundant","text":"spe deconvolution result Form SpatialExperiment method select results displayed cell_type one celltype plot, NULL remove vector cell types removed plot min_spot minimum number spots cell-type present palette colorspace palette (sequential) sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, whether display image, default = TRUE background custom background color offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size title_size font size title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px title set custom title show_legend whether show legend","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot deconvolution results — plot_most_abundant","text":"plot cell type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_ndetected_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of detected genes — plot_ndetected_genes","title":"Plot number of detected genes — plot_ndetected_genes","text":"Generating spatial plot number detected genes SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_ndetected_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of detected genes — plot_ndetected_genes","text":"","code":"plot_ndetected_genes(   spe,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   title = NULL,   font_size = 20,   legend_size = 40,   density = TRUE,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750,   assay = \"counts\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_ndetected_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of detected genes — plot_ndetected_genes","text":"spe deconvolution result Form SpatialExperiment palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, wether display image, default = TRUE offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title title set custom title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px assay assay","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_ndetected_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of detected genes — plot_ndetected_genes","text":"plot number detected genes","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmarking scatterplot to compare two spatial objects — plot_scatter","title":"Benchmarking scatterplot to compare two spatial objects — plot_scatter","text":"Benchmarking scatterplot compare two spatial objects","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmarking scatterplot to compare two spatial objects — plot_scatter","text":"","code":"plot_scatter(spe1, value1, spe2, value2)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmarking scatterplot to compare two spatial objects — plot_scatter","text":"spe1 SpatialExperiment value1 deconvolution result plot spe2 SpatialExperiment value2 deconvolution result plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot deconvolution results — plot_umi_count","title":"Function to plot deconvolution results — plot_umi_count","text":"Generate Hex Plot SpatialExperiment containing UMI counts","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot deconvolution results — plot_umi_count","text":"","code":"plot_umi_count(   spe,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   background = NULL,   offset_rotation = FALSE,   spot_size = 1,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   title = NULL,   font_size = 15,   legend_size = 20,   density = TRUE,   save = FALSE,   path = NULL,   png_width = 1500,   png_height = 750,   show_legend = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot deconvolution results — plot_umi_count","text":"spe deconvolution result Form SpatialExperiment palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, wether display image, default = TRUE background custom background color offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title title set custom title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot save set TRUE save plot path specify directory save plot, NULL: saving ~/spacedeconv png_width saving, png width px png_height saving, png height px show_legend whether show legend","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot deconvolution results — plot_umi_count","text":"plot cell type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot deconvolution results — plot_umi_count","text":"","code":"data(\"spatial_data_3\") deconv <- spacedeconv::deconvolute(spatial_data_3, method = \"estimate\") #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ✔ parameter OK [41ms] #>  #>  #>  #> ── Spatial  #> Assays: \"counts\" #> Genes: 36591 #> → without expression: 13039 (35.63%) #> Spots: 1322 #> Spots under tissue: 1322 (100%) #> Median Genes Per Spot: 3863.5 #> → without expression: 5 (0.38%) #> Umi count range: 0 - 61586 #> Spots with UMI count below 500: 137 (0.37%) #> ✔ Rownames set #> ✔ Colnames set #> ℹ deconvoluting #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9969 genes (443 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 136\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> ✔ finished [11.8s] #>  plot_umi_count(deconv)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess SingleCellExperiments and Spatial Experiments — preprocess","title":"Preprocess SingleCellExperiments and Spatial Experiments — preprocess","text":"Preprocess SingleCellExperiments Spatial Experiments","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess SingleCellExperiments and Spatial Experiments — preprocess","text":"","code":"preprocess(object, min_umi = 500, max_umi = NULL, assay = \"counts\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess SingleCellExperiments and Spatial Experiments — preprocess","text":"object SingleCellExperiment SpatialExperiment, AnnData Seurat converted min_umi minimum umi count spots/cells max_umi maximimum umi assay assay use calculation, can use assay counts recommended","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold a matrix — presence","title":"Threshold a matrix — presence","text":"Threshold matrix","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold a matrix — presence","text":"","code":"presence(spe, method, threshold = NULL)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold a matrix — presence","text":"spe SpatialExperiment containing deconvolution scores spot celltype method deconvolution method threshold single value provided threshold used celltypes, also possible provide threshold vector","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/print_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Print info about dataset — print_info","title":"Print info about dataset — print_info","text":"Print info dataset","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/print_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print info about dataset — print_info","text":"","code":"print_info(sce = NULL, spe = NULL, signature = NULL, assay = \"counts\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/print_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print info about dataset — print_info","text":"sce singleCellExperiment spe SpatialExperiment signature signature matrix assay assay use computation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/qualitycontrol.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality control function — qualitycontrol","title":"Quality control function — qualitycontrol","text":"Generates html report containing quality metrics SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/qualitycontrol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality control function — qualitycontrol","text":"","code":"qualitycontrol(spe, assay = \"counts\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/qualitycontrol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality control function — qualitycontrol","text":"spe SpatialExperiment object assay assay","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/qualitycontrol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality control function — qualitycontrol","text":"html file quality control metrics","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Spots with zero expression — removeZeroExpression","title":"Remove Spots with zero expression — removeZeroExpression","text":"function removes spots/columns zero expression detected. spots might result errors computation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Spots with zero expression — removeZeroExpression","text":"","code":"removeZeroExpression(object)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Spots with zero expression — removeZeroExpression","text":"object SummarizedExperiment related datatypes","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Spots with zero expression — removeZeroExpression","text":"Expression Object without zero columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/required_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"The dependencies for each method — required_packages","title":"The dependencies for each method — required_packages","text":"dependencies method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/required_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The dependencies for each method — required_packages","text":"","code":"required_packages"},{"path":"https://omnideconv.github.io/spacedeconv/reference/required_packages.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The dependencies for each method — required_packages","text":"object class list length 12.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/ripleys_k.html","id":null,"dir":"Reference","previous_headings":"","what":"Ripley´s K celltype distribution — ripleys_k","title":"Ripley´s K celltype distribution — ripleys_k","text":"Ripley´s K celltype distribution","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/ripleys_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ripley´s K celltype distribution — ripleys_k","text":"","code":"ripleys_k(spe, cell_type, method)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/ripleys_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ripley´s K celltype distribution — ripleys_k","text":"spe SpatialExperiment cell_type celltype interest method deconvolution method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/ripleys_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ripley´s K celltype distribution — ripleys_k","text":"plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Plot to path — save_plot","title":"Save Plot to path — save_plot","text":"Save Plot path","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Plot to path — save_plot","text":"","code":"save_plot(plot, to_plot, path, png_width, png_height)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Plot to path — save_plot","text":"plot ggplot to_plot celltype name path plot stored png_width saving, png width px png_height saving, png height px","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","title":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","text":"CIBERSORT freely available academic users. license binary can obtained https://cibersort.stanford.edu.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","text":"","code":"set_cibersort_binary(path)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","text":"path path cibersort R script.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","title":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","text":"CIBERSORT freely available academic users. license binary can obtained https://cibersort.stanford.edu.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","text":"","code":"set_cibersort_mat(path)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","text":"path path cibersort matrix.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"Convert Seurat SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"","code":"seurat_to_spatialexperiment(seurat)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"seurat Seurat Object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"single cell expression subset 5789 cells sample CID4290. Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"","code":"data(\"single_cell_data_1\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"SingleCellExperiment 29733 rows 5789 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"single cell expression subset 1564 cells sample CID4465. Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"","code":"data(\"single_cell_data_2\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"SingleCellExperiment 29733 rows 1564 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"single cell expression subset 7986 cells sample CID44971. Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"","code":"data(\"single_cell_data_3\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"SingleCellExperiment 29733 rows 7986 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"single cell expression subset 3961 cells sample CID4535 Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"","code":"data(\"single_cell_data_4\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"SingleCellExperiment 29733 rows 3961 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/smooth_celltype.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth spot annotation — smooth_celltype","title":"Smooth spot annotation — smooth_celltype","text":"Smooth spot annotation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/smooth_celltype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth spot annotation — smooth_celltype","text":"","code":"smooth_celltype(df, spot_distance, smoothing_factor = 1.5, cell_type = NULL)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/smooth_celltype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth spot annotation — smooth_celltype","text":"df DataFrame containing spot coordinates value smoothed spot_distance distance two spots smoothing_factor multiplied spot distance find close spots cell_type value smoothed","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spacedeconv_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"spacedeconv — spacedeconv_pkg","title":"spacedeconv — spacedeconv_pkg","text":"spacedeconv Unified R Interface spatial transcriptomics deconvolution methods","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spacedeconvstartup.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage python dependencies\naccording to: https://rstudio.github.io/reticulate/articles/python_dependencies.html#manual-configuration — spacedeconvstartup","title":"Manage python dependencies\naccording to: https://rstudio.github.io/reticulate/articles/python_dependencies.html#manual-configuration — spacedeconvstartup","text":"Manage python dependencies according : https://rstudio.github.io/reticulate/articles/python_dependencies.html#manual-configuration","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 1 from Wu et al. — spatial_data_1","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"SpatialExperiment containing total 2714 spots sample CID4290","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"","code":"data(\"spatial_data_1\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"SpatialExperiment 36601 genes 2714 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 2 from Wu et al. — spatial_data_2","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"SpatialExperiment containing total 1310 spots sample CID4465","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"","code":"data(\"spatial_data_2\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"SpatialExperiment 36601 genes 1310 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 3 from Wu et al. — spatial_data_3","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"SpatialExperiment containing total 1322 spots sample CID44971","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"","code":"data(\"spatial_data_3\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"SpatialExperiment 36601 genes 1322 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 4 from Wu et al. — spatial_data_4","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"SpatialExperiment containing total 1431 spots sample CID4535","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"","code":"data(\"spatial_data_4\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"SpatialExperiment 36601 genes 1431 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spe_to_ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Spatial Experiment to AnnData — spe_to_ad","title":"Convert Spatial Experiment to AnnData — spe_to_ad","text":"Convert Spatial Experiment AnnData","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spe_to_ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Spatial Experiment to AnnData — spe_to_ad","text":"","code":"spe_to_ad(spe, assay = \"counts\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spe_to_ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Spatial Experiment to AnnData — spe_to_ad","text":"spe Spatial experiment assay assay use","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Single Cell Experiment — subsetSCE","title":"Subset Single Cell Experiment — subsetSCE","text":"Subset SingleCellExperiment reduce number cells","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Single Cell Experiment — subsetSCE","text":"","code":"subsetSCE(   sce,   cell_type_col = \"celltype_major\",   scenario = \"even\",   ncells = 1000,   notEnough = \"asis\",   seed = 12345 )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Single Cell Experiment — subsetSCE","text":"sce SingleCellExperiment cell type annotation cell_type_col name colData column containing cell type information scenario fraction celltype present subsampled dataset? ncells number cells total, defaults 1000 notEnough enough cells available c(\"remove\", \"asis\") seed set seed, enables reproducibility subsetting step","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Single Cell Experiment — subsetSCE","text":"singleCellExperiment ","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Single Cell Experiment — subsetSCE","text":"","code":"data(\"single_cell_data_1\") sce <- subsetSCE(   single_cell_data_1,   cell_type_col = \"celltype_major\",   scenario = \"even\",   ncells = 100 ) #> ── spacedeconv ───────────────────────────────────────────────────────────────── #> ℹ testing parameter #> ℹ Set seed to 12345 #> ℹ testing parameter #> ✔ parameter OK [29ms] #>  #> ℹ extracting up to 100 cells #> ✔ extracting up to 100 cells [140ms] #>  #> ℹ extracted 96 cells #> ✔ extracted 96 cells [24ms] #>"},{"path":"https://omnideconv.github.io/spacedeconv/reference/topfeat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Top Features — topfeat","title":"Get Top Features — topfeat","text":"Get Top Features","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/topfeat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Top Features — topfeat","text":"","code":"topfeat(idx, scores, topn)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/topfeat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Top Features — topfeat","text":"idx ids scores scores topn number features","code":""}]
